<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>superbear's blog</title><link>https://superbear.github.io/</link><description>Recent content on superbear's blog</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Sun, 06 Apr 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://superbear.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>使用DuckDB处理日常数据需求</title><link>https://superbear.github.io/post/2025/04/duckdb/</link><pubDate>Sun, 06 Apr 2025 21:55:00 +0800</pubDate><guid>https://superbear.github.io/post/2025/04/duckdb/</guid><description>&lt;h2 id="duckdb简介">DuckDB简介&lt;/h2>
&lt;p>&lt;a href="https://duckdb.org/" target="_blank" rel="noopener">DuckDB&lt;/a>
: An Embedded Analytical Database&lt;/p>
&lt;p>DuckDB是一款开源的嵌入式（类似SQLite）分析数据库，旨在提供高效的查询性能。
支持标准SQL查询，提供了命令行工具及Golang等多种编程语言的Client API。&lt;/p></description></item><item><title>Java调用Go</title><link>https://superbear.github.io/post/2022/10/calling-go-functions-from-java/</link><pubDate>Sun, 16 Oct 2022 19:20:00 +0800</pubDate><guid>https://superbear.github.io/post/2022/10/calling-go-functions-from-java/</guid><description>&lt;h2 id="调用过程">调用过程&lt;/h2>
&lt;p>&lt;a href="https://pkg.go.dev/cmd/cgo" target="_blank" rel="noopener">Cgo&lt;/a>
将Go代码编译成动态链接库，然后Java通过&lt;a href="https://en.wikipedia.org/wiki/Java_Native_Access" target="_blank" rel="noopener">JNA&lt;/a>
来调用动态链接库&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">Go ---&amp;gt; Cgo --&amp;gt; Shared libraries &amp;lt;--- JNA &amp;lt;--- Java
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>名词解释&lt;/strong>&lt;/p>
&lt;p>Cgo：Go和C的桥梁，两者可以互相调用&lt;/p>
&lt;p>JNA：一个Java框架，让Java程序更方便地使用动态链接库&lt;/p></description></item><item><title>用Go、Java开发Hive UDF</title><link>https://superbear.github.io/post/2022/10/creating-custom-hive-user-defined-function-udf-in-go-and-java/</link><pubDate>Sun, 16 Oct 2022 18:30:00 +0800</pubDate><guid>https://superbear.github.io/post/2022/10/creating-custom-hive-user-defined-function-udf-in-go-and-java/</guid><description>&lt;h2 id="实现原理">实现原理&lt;/h2>
&lt;p>使用Cgo将Go代码编译成动态链接库，再通过Java调用动态链接库来开发Hive UDF。&lt;/p>
&lt;h2 id="完整示例">完整示例&lt;/h2>
&lt;p>&lt;a href="https://github.com/superbear/hive-udf-in-go" target="_blank" rel="noopener">https://github.com/superbear/hive-udf-in-go&lt;/a>
&lt;/p>
&lt;h2 id="hive-udf简介">Hive UDF简介&lt;/h2>
&lt;p>UDF是User Defined Function的简称，即用户自定义函数。按功能分，&lt;a href="https://cwiki.apache.org/confluence/display/Hive/Home" target="_blank" rel="noopener">Hive&lt;/a>
的UDF可分为以下三类：&lt;/p></description></item><item><title>Magit, 一款Emacs里好用的Git客户端</title><link>https://superbear.github.io/post/2022/09/magit-a-git-porcelain-inside-emacs/</link><pubDate>Sat, 17 Sep 2022 21:56:00 +0800</pubDate><guid>https://superbear.github.io/post/2022/09/magit-a-git-porcelain-inside-emacs/</guid><description>&lt;h2 id="magit简介">Magit简介&lt;/h2>
&lt;p>官网：&lt;a href="https://magit.vc/" target="_blank" rel="noopener">https://magit.vc/&lt;/a>
&lt;/p>
&lt;p>用户界面（from magit.vc）：&lt;img src="https://magit.vc/screenshots/status.png" alt="">&lt;/p>
&lt;p>部分命令选项比较多，提供了交互式的popup，不用刻意去记参数。如下图：&lt;img src="https://magit.vc/screenshots/popup-diff.png" alt="">&lt;/p>
&lt;h2 id="常用快捷键及命令">常用快捷键及命令&lt;/h2>
&lt;p>从 &lt;strong>C-x g（magit-status）&lt;/strong> 开始，查看工作区概况（相当于执行git status）。&lt;/p></description></item><item><title>Hive读写（集成）Elasticsearch</title><link>https://superbear.github.io/post/2022/02/hive-read-write-elasticsearch-data-integration/</link><pubDate>Mon, 28 Feb 2022 13:20:00 +0800</pubDate><guid>https://superbear.github.io/post/2022/02/hive-read-write-elasticsearch-data-integration/</guid><description>&lt;p>部分业务场景需要将Hive（离线数仓）数据同步到Elasticsearch集群里，供在线业务使用；
或将Elasticsearch的数据写入Hive，用于离线分析。&lt;/p></description></item><item><title>两步验证（2FA）Emacs插件及命令行版工具</title><link>https://superbear.github.io/post/2022/01/two-factor-authentication-one-time-password-command-line-tools-share/</link><pubDate>Sun, 09 Jan 2022 19:18:00 +0800</pubDate><guid>https://superbear.github.io/post/2022/01/two-factor-authentication-one-time-password-command-line-tools-share/</guid><description>&lt;h2 id="两步验证">两步验证&lt;/h2>
&lt;p>两步验证（也称双因素身份验证，Two-factor authentication，简称2FA）&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>，还有多因素身份认证（MFA）。
因素越多，证明力就越强，身份就越可靠。&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>
比较常见的实现方式是静态密码+一次性密码（One-time password，简称OTP）&lt;sup id="fnref:3">&lt;a href="#fn:3" class="footnote-ref" role="doc-noteref">3&lt;/a>&lt;/sup>。&lt;/p></description></item><item><title>使用Emacs Script自动将org文件导出为Markdown</title><link>https://superbear.github.io/post/2021/12/batch-export-org-files-to-markdown-with-emacs-script-and-ox-hugo/</link><pubDate>Fri, 03 Dec 2021 11:32:00 +0800</pubDate><guid>https://superbear.github.io/post/2021/12/batch-export-org-files-to-markdown-with-emacs-script-and-ox-hugo/</guid><description>&lt;p>接上篇 &lt;a href="https://superbear.github.io/post/2021/11/use-org-mode-and-hugo-to-write-blog/">用Org Mode + Hugo写博客，并通过Github Action自动部署到Github Pages&lt;/a>
&lt;/p>
&lt;h2 id="痛点">痛点&lt;/h2>
&lt;p>代码仓库里会同时保存org文件和markdown文件，markdown文件其实是中间产物，不想保存。&lt;/p></description></item><item><title>用Org Mode + Hugo写博客，并通过Github Action自动部署到Github Pages</title><link>https://superbear.github.io/post/2021/11/use-org-mode-and-hugo-to-write-blog/</link><pubDate>Sun, 28 Nov 2021 14:55:00 +0800</pubDate><guid>https://superbear.github.io/post/2021/11/use-org-mode-and-hugo-to-write-blog/</guid><description>&lt;h2 id="准备工作">准备工作&lt;/h2>
&lt;p>创建两个Github仓库&lt;/p>
&lt;ul>
&lt;li>用来放org文件、markdown文件及Hugo相关配置，可以设置成私有，如blog。&lt;/li>
&lt;li>Github Pages仓库，用来放生成的静态文件。一般是{username}.github.io。&lt;/li>
&lt;/ul>
&lt;p>安装&lt;a href="https://gohugo.io/getting-started/quick-start/" target="_blank" rel="noopener">Hugo&lt;/a>
&lt;/p></description></item></channel></rss>